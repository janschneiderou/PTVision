<UserControl x:Class="PTVision.WelcomePage2"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PTVision"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1000">
    <Grid Name="myGrid" Background="White">
        
        <Line Stroke="Gray" X1="200" X2="200" Y1="0" Y2="800" />
        <Image x:Name="parrotImg" Source="Images\EasterEgg.png" Height="70"  VerticalAlignment="Top" HorizontalAlignment="Left"  Margin="0,0,0,0" MouseEnter="Image_MouseEnter" MouseLeave="Image_MouseLeave"/>
        <Image Source="Images\Title.png"  VerticalAlignment="Top" HorizontalAlignment="Left" Height="35" Margin="5,69,0,0" />


        <Button Name="ComposeButton" HorizontalAlignment="Left"  MouseEnter="ComposeButton_MouseEnter" MouseLeave="ComposeButton_MouseLeave" Click="ComposeButton_Click" BorderThickness="0"  Margin="0,90,0,0" VerticalAlignment="Top" FontSize="20" Background="Transparent" Height="70" Width="200">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Image x:Name="imgComposeButton" Source="Images/btn_Compose.png" />
        </Button>

        <Button Name="MakeItShineButton" HorizontalAlignment="Left"  MouseLeave="MakeItShineButton_MouseLeave" MouseEnter="MakeItShineButton_MouseEnter" Click="MakeItShineButton_Click" BorderThickness="0"  Margin="0,160,0,0" VerticalAlignment="Top" FontSize="20" Background="Transparent" Height="70" Width="200">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Image x:Name="imgMakeItShineButton" Source="Images/btn_MakeItShine.png" />
        </Button>

        <Button Name="PracticeButton" MouseLeave="PracticeButton_MouseLeave" MouseEnter="PracticeButton_MouseEnter" Click="PracticeButton_Click" HorizontalAlignment="Left"   BorderThickness="0"  Margin="0,220,0,0" VerticalAlignment="Top" FontSize="20" Background="Transparent" Height="70" Width="200">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Image x:Name="imgPracticeButton" Source="Images/btn_Practice.png" />
        </Button>

        <Button Name="ReflectButton" HorizontalAlignment="Left" MouseLeave="ReflectButton_MouseLeave"  MouseEnter="ReflectButton_MouseEnter" Click="ReflectButton_Click" BorderThickness="0"  Margin="0,290,0,0" VerticalAlignment="Top" FontSize="20" Background="Transparent" Height="70" Width="200">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Image x:Name="imgReflectButton" Source="Images/btn_Reflect.png" />
        </Button>


        <Rectangle VerticalAlignment="Bottom" Height="60" Fill="#219ebc" ></Rectangle>
        <Label Content="Select Camera" HorizontalAlignment="Left" Margin="22,0,0,10" VerticalAlignment="Bottom" FontWeight="Bold" Foreground="White"/>
        <ComboBox Name="cameraSelector" Background="Transparent" BorderBrush="Transparent"  Foreground="Black"  HorizontalAlignment="Left" Margin="144,0,0,10" VerticalAlignment="Bottom" Width="120" SelectionChanged="cameraSelector_SelectionChanged" Opacity="0.5"/>
        <Button  HorizontalAlignment="Left" MouseEnter="Button_MouseEnter_Volume" MouseLeave="Button_MouseLeave_Volume" Margin="300,0,0,10" VerticalAlignment="Bottom" Click="Volume_Button_Click" BorderThickness="0" Background="Transparent" Height="30" Width="30">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Image Name="volumeButtonImg" Source="Images/btn_volume1.png" />
        </Button>
        <Button Name="UserManagementButton" IsEnabled="False" MouseEnter="UserManagementButton_MouseEnter" MouseLeave="UserManagementButton_MouseLeave" Background="Transparent" HorizontalAlignment="Left" Margin="350,0,0,10" VerticalAlignment="Bottom" Click="UserManagementButton_Click" BorderThickness="0"  Height="30" Width="30">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Image Name="UserManagementButtonImg" Source="Images/btn_user.png" />
        </Button>
       
        <Label Foreground="White" Content="Select Speech Language:"  HorizontalAlignment="Left" Margin="500,0,0,10" VerticalAlignment="Bottom" FontWeight="Bold"/>
        <ComboBox Name="languageSelector" Background="Transparent" BorderBrush="Transparent"  Foreground="Black"  HorizontalAlignment="Left" Margin="670,0,0,10" VerticalAlignment="Bottom" Width="120" SelectionChanged="languageSelector_SelectionChanged" Opacity="0.5">
            <ComboBox.ToolTip>
                <ToolTip>
                    <TextBlock Text="Select your desired installed speech language"/>
                </ToolTip>
            </ComboBox.ToolTip>
        </ComboBox>
        <Button  HorizontalAlignment="Right" Margin="0,0,20,10" MouseEnter="Button_MouseEnter_Exit" MouseLeave="Button_MouseLeave_Exit"  VerticalAlignment="Bottom" Height="45" BorderThickness="0" Click="Exit_Button_Click" Background="Transparent">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Image Name="buttonExitImg" Source="Images/btn_exit1.png" />
        </Button>
        <local:Tutor x:Name="Tutor" HorizontalAlignment="Left" Margin="506,395,0,0" VerticalAlignment="Top" Visibility="Collapsed"/>
        <Line Stroke="Gray" X1="200" X2="200" Y1="0" Y2="800" />

        <Image x:Name="promoImg" Source="Images\Promo.png" HorizontalAlignment="Right" Width="200" VerticalAlignment="Top"  Margin="0,0,0,0"  />

    </Grid>
</UserControl>
